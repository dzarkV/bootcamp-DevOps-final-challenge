name: pipeline-dockerhub

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME_NODE: bootcampdevops_nodejs
  IMAGE_NAME_GOLANG: bootcampdevops_golang

jobs:

  trivy-security-node:   
    runs-on: ubuntu-latest
    needs: docker_build_node
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image of node from Dockerfile
        run: |
          make build-docker-app-node && docker tag ${{ ENV.IMAGE_NAME_NODE }} ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_NODE }}:latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_NODE }}:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  trivy-security-golang:   
    runs-on: ubuntu-latest
    needs: docker_build_golang
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image of golang from Dockerfile
        run: |
          make build-docker-app-golang && docker tag ${{ ENV.IMAGE_NAME_GOLANG }} ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_GOLANG }}:latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_GOLANG }}:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  docker_registry:
    needs: [trivy-security-node,trivy-security-golang]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push node
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_NODE }}:latest 
      - name: Build and push golang
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_GOLANG }}:latest 