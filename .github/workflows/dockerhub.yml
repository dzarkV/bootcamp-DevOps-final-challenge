name: pipeline-dockerhub

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME_NODE: bootcampDevOps_nodejs
  IMAGE_NAME_GOLANG: bootcampDevOps_golang

jobs:
  docker_build_node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file ./hello-world-nodejs/Dockerfile --tag ${{env.IMAGE_NAME_NODE}}:$(date +%F%H%M%S)

  docker_build_golang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file ./hello-world-golang/Dockerfile --tag ${{env.IMAGE_NAME_GOLANG}}:$(date +%F%H%M%S)

  trivy-security:   
    runs-on: ubuntu-latest
    needs: [docker_build_node, docker_build_golang]
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image of node from Dockerfile
        run: |
          docker build -t ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_NODE }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_NODE }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Build an image of golang from Dockerfile
        run: |
          docker build -t ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_GOLANG }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME_GOLANG }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

  # docker_registry:
  #   needs: docker_build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         push: true
  #         tags: ${{ env.REGISTRY_NAME }}/${{ ENV.IMAGE_NAME }}:latest 